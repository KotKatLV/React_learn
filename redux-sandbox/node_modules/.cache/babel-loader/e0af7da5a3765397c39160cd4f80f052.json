{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k.kapatkou\\\\repos\\\\React_learn\\\\redux-sandbox\\\\src\\\\components\\\\counter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = _ref => {\n  let {\n    counter,\n    inc,\n    dec,\n    rnd\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jumbotron\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: dec,\n      className: \"btn btn-primary btn-lg\",\n      children: \"DEC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: inc,\n      className: \"btn btn-primary btn-lg\",\n      children: \"INC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rnd,\n      className: \"btn btn-primary btn-lg\",\n      children: \"RND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Counter;\n\nconst mapStateToProps = state => {\n  return {\n    counter: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inc: () => dispatch({\n      type: 'INC'\n    }),\n    dec: () => dispatch({\n      type: 'DEC'\n    }),\n    rnd: () => dispatch({\n      type: 'RND'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/k.kapatkou/repos/React_learn/redux-sandbox/src/components/counter.js"],"names":["React","connect","Counter","counter","inc","dec","rnd","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,OAAO,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,GAAhB;AAAqBC,IAAAA;AAArB,GAA+B;AAC9C,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,OAAO,EAAEE,GADX;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AACE,MAAA,OAAO,EAAED,GADX;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AACE,MAAA,OAAO,EAAEE,GADX;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMJ,O;;AAiBN,MAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAM;AACJL,IAAAA,OAAO,EAAEK;AADL,GAAN;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAM;AACJN,IAAAA,GAAG,EAAE,MAAMM,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CADf;AAEJN,IAAAA,GAAG,EAAE,MAAMK,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAFf;AAGJL,IAAAA,GAAG,EAAE,MAAMI,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD;AAHf,GAAN;AAKD,CAND;;AAQA,eAAeV,OAAO,CAACM,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CP,OAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Counter = ({ counter, inc, dec, rnd }) => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h2>{counter}</h2>\r\n      <button\r\n        onClick={dec}\r\n        className=\"btn btn-primary btn-lg\">DEC</button>\r\n      <button\r\n        onClick={inc}\r\n        className=\"btn btn-primary btn-lg\">INC</button>\r\n      <button\r\n        onClick={rnd}\r\n        className=\"btn btn-primary btn-lg\">RND</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    counter: state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    inc: () => dispatch({type: 'INC'}),\r\n    dec: () => dispatch({type: 'DEC'}),\r\n    rnd: () => dispatch({type: 'RND'})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);"]},"metadata":{},"sourceType":"module"}